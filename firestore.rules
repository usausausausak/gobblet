rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    match /{roomKind}/{roomId} {
      function vaildKind() {
        return roomKind == 'public' || roomKind == 'private';
      }

      function roomPrivate() {
        return resource.data.privateRoom == true && roomKind == 'private';
      }

      function roomVaild() {
        return roomKind == 'public' || roomPrivate();
      }

      function roomEmpty() {
        return resource.data.joinTime == null;
      }

      function roomClose() {
        return resource.data.endTime != null;
      }

      function roomOpen() {
        return resource.data.endTime == null;
      }

      function createOrUpdateRoom() {
        return request.resource.data.joinTime == null && request.resource.data.endTime == null;
      }

      function createPublicRoom() {
        return roomKind == 'public' && request.resource.data.privateRoom == false;
      }

      function createPrivateRoom() {
        return request.resource.data.privateRoom == true && roomKind == 'private';
      }

      function joinRoom() {
        return request.resource.data.joinTime != null;
      }

      function endRoom() {
        return request.resource.data.endTime != null;
      }

      allow read: if vaildKind();

      // create room
      allow create: if createOrUpdateRoom() && createPublicRoom() || createPrivateRoom();

      // stop match
      allow update: if roomVaild() && roomOpen() && roomEmpty() && endRoom();

      // join room
      allow update: if roomVaild() && roomOpen() && roomEmpty() && joinRoom();

      // end room
      allow update: if roomVaild() && roomOpen() && endRoom();

      // update room
      allow update: if roomVaild() && roomClose() && roomPrivate() && createOrUpdateRoom() && resource.data.privateRoom == true;

      match /{steps}/{stepId} {
        function roomExists() {
          return exists(/databases/$(database)/documents/$(roomKind)/$(roomId));
        }
        allow read: if roomExists();
        allow create, update: if roomExists() && stepId == 'exception';
        allow create: if roomExists() && stepId != 'exception';
      }
    }
  }
}
